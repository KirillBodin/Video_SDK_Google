const ClassMeeting = require("../models/ClassMeeting");

/**
 * ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ / –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏
 */
const createMeeting = async (req, res) => {
  try {
    const { className, meetingId, teacherId } = req.body;
    if (!className || !meetingId || !teacherId) {
      return res.status(400).json({ error: "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" });
    }

    const existingClass = await ClassMeeting.findOne({ where: { className } });

    if (existingClass) {
      existingClass.meetingId = meetingId;
      await existingClass.save();
      console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω meetingId –¥–ª—è ${className}: ${meetingId}`);
    } else {
      await ClassMeeting.create({ className, meetingId, teacherId });
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞: ${className} ‚Üí ${meetingId}`);
    }

    res.json({ message: "–í—Å—Ç—Ä–µ—á–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!", className, meetingId });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Å—Ç—Ä–µ—á–∏:", error);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};

/**
 * ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ Meeting ID –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–ª–∞—Å—Å–∞
 */
const getMeetingByClass = async (req, res) => {
  try {
    const { className } = req.params;
    const classData = await ClassMeeting.findOne({ where: { className } });

    if (!classData) {
      return res.status(404).json({ error: "–ö–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    res.json({ className, meetingId: classData.meetingId });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ Meeting ID:", error);
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};

module.exports = { createMeeting, getMeetingByClass };
